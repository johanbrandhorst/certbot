version: 2
jobs:
  build:
    docker:
      - image: golang:latest
    steps:
      - checkout
      - run: go build ./...
  vendor:
    docker:
      - image: golang:latest
    steps:
      - checkout
      - run: go mod verify
      - run: go mod tidy
      - run: git diff --exit-code
  generate:
    docker:
      - image: golang:1.12 # moq doesn't work with 1.13 https://github.com/matryer/moq/issues/103
    environment:
      GO111MODULE: "on"
      GOPROXY: "https://proxy.golang.org"
    steps:
      - checkout
      - run: apt-get update
      - run: apt-get install -y protobuf-compiler
      - run: go install github.com/golang/protobuf/protoc-gen-go github.com/matryer/moq
      - run: go mod vendor # for AWS interface mock generation
      - run: go generate -x ./...
      - run: go mod tidy
      - run: git diff --exit-code
  test:
    machine:
      image: circleci/classic:edge
    # The CircleCI user's GOPATH
    working_directory: /home/circleci/.go_workspace/src/github.com/johanbrandhorst/certify
    steps:
      - checkout
      - run: go get github.com/lpar/goup
      - run: sudo rm -rf /usr/local/go
      - run: yes | sudo /home/circleci/.go_workspace/bin/goup --force --os linux --arch amd64 || true # swallow exit 141
      - run: go install github.com/onsi/ginkgo/ginkgo
      - run: ginkgo -v -r -coverprofile=coverage.txt -cover --randomizeAllSpecs --randomizeSuites --failOnPending --trace --race --progress --skipPackage=vendor --skipMeasurements
      - run: bash <(curl -s https://codecov.io/bash)
  docker:
    docker:
      - image: docker
    steps:
      - setup_remote_docker
      - checkout
      - run: docker build .
workflows:
  version: 2
  all:
    jobs:
      - build
      - vendor
      - generate
      - test
      - docker
